// src/index.ts
import { h } from "vue";
import { RouterView } from "vue-router";
var isVueFile = (name) => /\.vue/.test(name);
function getRoutes(meta, options) {
  const reg = new RegExp(`[./]*${options.pathRoot}`);
  const path = Object.keys(meta).reduce((all, c) => {
    const paths = c.replace(reg, "").split("/");
    let tmp = all;
    while (paths.length) {
      const name = paths.shift() || "";
      if (!isVueFile(name)) {
        if (!tmp[name])
          tmp[name] = {};
        tmp = tmp[name];
      } else {
        const file = name.replace(".vue", "");
        tmp[file] = c;
      }
    }
    return all;
  }, {});
  return toArr(path, meta, 0);
}
var getPath = (name, deep) => deep > 0 ? name === "HomeView" ? "" : `${name}` : name === "HomeView" ? "/" : `/${name}`;
function toArr(data, meta, deep) {
  return Object.entries(data).map(([name, pathInfo]) => {
    if (typeof pathInfo === "string") {
      return { path: getPath(name, deep), component: meta[pathInfo] };
    } else {
      return {
        path: getPath(name, deep),
        component: pathInfo.HomeView ? meta[pathInfo.HomeView] : h(RouterView),
        children: toArr(pathInfo, meta, deep + 1)
      };
    }
  });
}
export {
  getRoutes
};
